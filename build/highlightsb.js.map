{"version":3,"file":"highlightsb.js","mappings":"CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,GACe,iBAAZC,QACdA,QAAqB,YAAID,IAEzBD,EAAkB,YAAIC,IARxB,CASGK,MAAM,I,mBCRT,IAAIC,EAAsB,CCA1BA,EAAwB,CAACL,EAASM,KACjC,IAAI,IAAIC,KAAOD,EACXD,EAAoBG,EAAEF,EAAYC,KAASF,EAAoBG,EAAER,EAASO,IAC5EE,OAAOC,eAAeV,EAASO,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,MCJ3EF,EAAwB,CAACQ,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFT,EAAyBL,IACH,oBAAXkB,QAA0BA,OAAOC,aAC1CV,OAAOC,eAAeV,EAASkB,OAAOC,YAAa,CAAEC,MAAO,WAE7DX,OAAOC,eAAeV,EAAS,aAAc,CAAEoB,OAAO,M,uiCCGvD,IAAMC,EAAgB,aAChBC,EAAoB,SAEpBC,EACM,cADNA,EAEC,YAFDA,EAGQ,UAHRA,EAIQ,cAJRA,EAKS,eAGR,SAASC,EAAOC,GAAqC,IAAxBC,EAAwB,uDAAJ,GACvD,EAA6BC,MAAMC,QAAQH,GAAQA,EAAO,CAACA,EAAM,IAAjE,SAAOI,EAAP,YAAcC,OAAd,MAAuB,GAAvB,EAEMC,GAAYL,aAAA,EAAAA,EAASK,YAAa,EAClCC,GAAUN,aAAA,EAAAA,EAASM,WAAYC,QAAQJ,GAASC,GAAUI,EAAc,CAACL,EAAOC,IAAW,IAC3FK,EAAWL,GAAUD,EAE3B,OAAOO,EAAcD,EAAU,CAAEJ,UAAAA,EAAWC,QAAAA,IAGtC,SAASI,EAAcX,GAAsE,6DAAZ,GAAY,IAAtDM,UAAAA,OAAsD,MAA1C,EAA0C,MAAvCC,QAAAA,OAAuC,MAA7B,GAA6B,EAC7FK,EAAQC,EAAWb,GAErBc,EAAO,GAMX,GAJuC,KAAnCF,EAAMA,EAAMG,OAAS,GAAGC,QAC3BJ,EAAMK,OAGFL,EAAMG,OACV,OAAOf,EAGR,IAAK,IAAIkB,EAAI,EAAGA,EAAIN,EAAMG,OAAQG,IAAK,CACtC,IAAMC,EACL,8GAKKC,EAAO,CACZtB,EACAA,EACAA,EACAS,EAAQc,SAASH,GAAjB,WAA0BpB,GAA0B,IACnDoB,EAAIZ,GAAWgB,WAChBV,EAAMM,GAAGH,OAAS,EAAIH,EAAMM,GAAK,IAGlCJ,GAAQS,EAAOJ,EAAMC,GAGtB,OAAOG,EAAO,qDAAsD,CAACzB,EAAqBgB,IAGpF,SAASL,EAAcT,GAI7B,IAHA,QAAwBA,EAAKwB,IAAIX,GAAjC,GAAOT,EAAP,KAAcC,EAAd,KACME,EAAU,GAEPW,EAAI,EAAGA,EAAIb,EAAOU,OAAQG,IAClCd,EAAMc,KAAOb,EAAOa,IAAMX,EAAQkB,KAAKP,GAGxC,OAAOX,EAGR,SAASM,EAAWb,GACnB,OAAKA,EAAKe,OACHf,EAAK0B,MAAM7B,GADO,GAInB,SAAS0B,EAAOJ,EAAcC,GACpC,OAAOD,EAAKQ,QAAQ/B,GAAe,SAACgC,EAAGC,GACtC,YAAmBC,IAAZV,EAAKS,GAAmBT,EAAKS,GAAKD,K","sources":["webpack://highlightsb/webpack/universalModuleDefinition","webpack://highlightsb/webpack/bootstrap","webpack://highlightsb/webpack/runtime/define property getters","webpack://highlightsb/webpack/runtime/hasOwnProperty shorthand","webpack://highlightsb/webpack/runtime/make namespace object","webpack://highlightsb/./src/lib/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"highlightsb\"] = factory();\n\telse\n\t\troot[\"highlightsb\"] = factory();\n})(self, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import \"./index.sass\";\n\ntype TText = string | [string, string | undefined];\ntype TOptions = {\n\tstartLine?: number;\n\tmarkers?: number[];\n};\n\nconst REGEXP_FORMAT = /\\{(\\d+)\\}/g;\nconst REGEXP_LINE_BREAK = /\\r?\\n/g;\n\nconst CSS_CLASS = {\n\tCONTAINER: \"highlightsb\",\n\tLINE: \"hlsb-line\",\n\tLINE_MARKER: \"_marker\",\n\tLINE_NUMBER: \"hlsb-number\",\n\tLINE_CONTENT: \"hlsb-content\",\n};\n\nexport function create(text: TText, options: TOptions = {}) {\n\tconst [first, second = \"\"] = Array.isArray(text) ? text : [text, \"\"];\n\n\tconst startLine = options?.startLine || 1;\n\tconst markers = options?.markers || (Boolean(first && second) ? searchMarkers([first, second]) : []);\n\tconst codeBase = second || first;\n\n\treturn createNumbers(codeBase, { startLine, markers });\n}\n\nexport function createNumbers(text: string, { startLine = 1, markers = [] }: TOptions = {}): string {\n\tconst lines = breakLines(text);\n\n\tlet html = \"\";\n\n\tif (lines[lines.length - 1].trim() === \"\") {\n\t\tlines.pop();\n\t}\n\n\tif (!lines.length) {\n\t\treturn text;\n\t}\n\n\tfor (let i = 0; i < lines.length; i++) {\n\t\tconst temp =\n\t\t\t`<span class=\"{0}{3}\" data-line-number=\"{4}\">` +\n\t\t\t`<span class=\"{1}\">{4}</span>` +\n\t\t\t`<span class=\"{2}\">{5}</span>` +\n\t\t\t`</span>`;\n\n\t\tconst args = [\n\t\t\tCSS_CLASS.LINE, // {0}\n\t\t\tCSS_CLASS.LINE_NUMBER, // {1}\n\t\t\tCSS_CLASS.LINE_CONTENT, // {2}\n\t\t\tmarkers.includes(i) ? ` ${CSS_CLASS.LINE_MARKER}` : \"\", // {3}\n\t\t\t(i + startLine).toString(), // {4}\n\t\t\tlines[i].length > 0 ? lines[i] : \"\", // {5}\n\t\t];\n\n\t\thtml += format(temp, args);\n\t}\n\n\treturn format(`<div class=\"{0}\"><pre><code>{1}</code></pre></div>`, [CSS_CLASS.CONTAINER, html]);\n}\n\nexport function searchMarkers(text: string[]): number[] {\n\tconst [first, second] = text.map(breakLines);\n\tconst markers = [];\n\n\tfor (let i = 0; i < second.length; i++) {\n\t\tfirst[i] !== second[i] && markers.push(i);\n\t}\n\n\treturn markers;\n}\n\nfunction breakLines(text: string): string[] {\n\tif (!text.length) return [];\n\treturn text.split(REGEXP_LINE_BREAK);\n}\n\nexport function format(temp: string, args?: string[]): string {\n\treturn temp.replace(REGEXP_FORMAT, (m, n) => {\n\t\treturn args[n] !== undefined ? args[n] : m;\n\t});\n}\n"],"names":["root","factory","exports","module","define","amd","self","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","REGEXP_FORMAT","REGEXP_LINE_BREAK","CSS_CLASS","create","text","options","Array","isArray","first","second","startLine","markers","Boolean","searchMarkers","codeBase","createNumbers","lines","breakLines","html","length","trim","pop","i","temp","args","includes","toString","format","map","push","split","replace","m","n","undefined"],"sourceRoot":""}